<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.examind.community</groupId>
        <artifactId>bundles</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>exa-bundle</artifactId>
    <packaging>war</packaging>
    <name>War : Community All In One Bundle</name>

    <properties>
        <jai.version>1.1.3</jai.version>
        <jai-io.version>1.1.1</jai-io.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
        <docker.tag>latest</docker.tag>
   </properties>

    <dependencies>
        <dependency>
            <groupId>com.examind.community</groupId>
            <artifactId>exa-webui</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.examind.community</groupId>
            <artifactId>exa-services</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.examind.community</groupId>
            <artifactId>cstl-web-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>examind</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>examind</warName>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>${basedir}/src/main/webapp</directory>
                        </resource>
                    </webResources>
                    <overlays>
                        <overlay>
                            <!-- empty groupId/artifactId represents the current build -->
                        </overlay>
                        <overlay>
                            <id>exa-webui</id>
                            <groupId>com.examind.community</groupId>
                            <artifactId>exa-webui</artifactId>
                        </overlay>
                        <overlay>
                            <id>exa-services</id>
                            <groupId>com.examind.community</groupId>
                            <artifactId>exa-services</artifactId>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <repository>images.geomatys.com/examind/examind-community</repository>
                    <tag>${docker.tag}</tag>
                    <contextDirectory>${project.build.directory}</contextDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <property><name>docker.build</name></property>
            </activation>

            <build>
                <plugins>
                    <!-- Copy docker build files into target directory -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dockerfile</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/docker</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Add support for third-party file-systems-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-nio-filesystems</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/file-system-support
                                    </outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.github.robtimus</groupId>
                                            <artifactId>ftp-fs</artifactId>
                                            <version>1.3-GEOMATYS-MC0001</version>
                                            <classifier>jar-with-dependencies</classifier>
                                            <type>jar</type>
                                            <destFileName>geomatys-ftp.jar</destFileName>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.geomatys.fork</groupId>
                                            <artifactId>geomatys-s3</artifactId>
                                            <version>1.5.1-GEOMATYS-MC0005</version>
                                            <classifier>jar-with-dependencies</classifier>
                                            <type>jar</type>
                                            <destFileName>geomatys-s3.jar</destFileName>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>com.geomatys</groupId>
                                            <artifactId>hadoop-nio2-fs</artifactId>
                                            <version>1.0-GEOMATYS-MC0003</version>
                                            <type>jar</type>
                                            <destFileName>geomatys-hdfs.jar</destFileName>
                                        </artifactItem>

                                        <artifactItem>
                                            <groupId>ch.pontius.nio</groupId>
                                            <artifactId>smb-nio</artifactId>
                                            <version>0.4-GEOMATYS-MC0001</version>
                                            <classifier>jar-with-dependencies</classifier>
                                            <type>jar</type>
                                            <destFileName>geomatys-smb.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                     Note: docker build configuration is defined outside profile, to allow users to rebuild image using
                     directly mvn dockerfile:build command when needed (must have packaged once with docker profile, to
                     be sure all needed files are in the right place).
                    -->
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-tomcat-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>tag</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
