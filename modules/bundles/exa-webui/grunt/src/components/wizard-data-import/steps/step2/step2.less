@import "stores-tree-view/stores-tree-view";

step2-wizard {

  .step2 {
    padding-top: 10px;

    .resources-block {
      background-color: rgba(102, 102, 102, .5);
    }

    .store-tree-container {
      background-color: rgba(102, 102, 102, .5);
      padding: 10px;
      overflow: hidden;
      border-radius: 5px;
      display: flex;
      flex-wrap: wrap;
      margin: 0;

      .store-tree-block {
        background-color: rgba(91, 192, 222, .1);
        border: 1px solid #424242;
        overflow: auto;
        max-height: 550px;
        min-height: 352px;
        border-radius: 5px;
      }

      .preview-map-block {
        background-color: rgba(91, 192, 222, .1);
        border: 1px solid #424242;
        overflow: auto;
        border-radius: 5px;

        preview-map {
          height: 350px;
          
          .fullscreen-overview() {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            border: 0;
          }

          &:-moz-full-screen,
          &:-moz-full-screen > .ol-viewport {
            .fullscreen-overview();
          }
          &:-webkit-full-screen,
          &:-webkit-full-screen > .ol-viewport  {
            .fullscreen-overview();
          }
          &:-ms-fullscreen,
          &:-ms-fullscreen > .ol-viewport  {
            .fullscreen-overview();
          }
          &:fullscreen,
          &:fullscreen > .ol-viewport {
            .fullscreen-overview();
          }
          
        }

      }

    }

    .analysis-container {
      background-color: rgba(102, 102, 102, .5);
      padding: 10px;
      overflow: hidden;
      border-radius: 5px;
      margin: 0;

      .analysis-block {
        font-weight: 700;
        padding: 12px 8px;
        background-color: rgba(91, 192, 222, .1);
        border: 1px solid #424242;
        border-radius: 5px;
        i {
          vertical-align: middle !important;
        }

        .tooltipicon {
          padding: 0;
          margin-top: 0;
          cursor: pointer;

          i {
            font-size: 18px;
          }
        }

        .analysis {
          display: inline;

          span {
            /**
             * Use the blink animation, which is defined above
             */
            animation-name: blink;
            /**
             * The animation should take 1.4 seconds
             */
            animation-duration: 1.4s;
            /**
             * It will repeat itself forever
             */
            animation-iteration-count: infinite;
            /**
             * This makes sure that the starting style (opacity: .2)
             * of the animation is applied before the animation starts.
             * Otherwise we would see a short flash or would have
             * to set the default styling of the dots to the same
             * as the animation. Same applies for the ending styles.
             */
            animation-fill-mode: both;
          }

          span:nth-child(2) {
            /**
             * Starts the animation of the third dot
             * with a delay of .2s, otherwise all dots
             * would animate at the same time
             */
            animation-delay: .2s;
          }

          span:nth-child(3) {
            /**
             * Starts the animation of the third dot
             * with a delay of .4s, otherwise all dots
             * would animate at the same time
             */
            animation-delay: .4s;
          }

        }
      }
    }

    .failure-container {
      background-color: rgba(102, 102, 102, .5);
      padding: 10px;
      overflow: hidden;
      border-radius: 5px;
      margin: 0;

      .failure-block {
        font-weight: 700;
        padding: 12px 8px;
        background-color: rgba(217, 83, 79, .1);
        border: 1px solid #424242;
        border-radius: 5px;

        i {
          vertical-align: middle !important;
          margin-right: 5px;
        }

        p {
          display: inline;
          font-size: 13px;
        }
      }

    }

  }

}