/*
 * This file is generated by jOOQ.
 */
package org.constellation.database.api.jooq.tables.records;


import javax.validation.constraints.NotNull;

import org.constellation.database.api.jooq.tables.ThesaurusXService;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThesaurusXServiceRecord extends TableRecordImpl<ThesaurusXServiceRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.thesaurus_x_service.service_id</code>.
     */
    public ThesaurusXServiceRecord setServiceId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>admin.thesaurus_x_service.service_id</code>.
     */
    @NotNull
    public Integer getServiceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>admin.thesaurus_x_service.thesaurus_id</code>.
     */
    public ThesaurusXServiceRecord setThesaurusId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>admin.thesaurus_x_service.thesaurus_id</code>.
     */
    @NotNull
    public Integer getThesaurusId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ThesaurusXService.THESAURUS_X_SERVICE.SERVICE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ThesaurusXService.THESAURUS_X_SERVICE.THESAURUS_ID;
    }

    @Override
    public Integer component1() {
        return getServiceId();
    }

    @Override
    public Integer component2() {
        return getThesaurusId();
    }

    @Override
    public Integer value1() {
        return getServiceId();
    }

    @Override
    public Integer value2() {
        return getThesaurusId();
    }

    @Override
    public ThesaurusXServiceRecord value1(Integer value) {
        setServiceId(value);
        return this;
    }

    @Override
    public ThesaurusXServiceRecord value2(Integer value) {
        setThesaurusId(value);
        return this;
    }

    @Override
    public ThesaurusXServiceRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ThesaurusXServiceRecord
     */
    public ThesaurusXServiceRecord() {
        super(ThesaurusXService.THESAURUS_X_SERVICE);
    }

    /**
     * Create a detached, initialised ThesaurusXServiceRecord
     */
    public ThesaurusXServiceRecord(Integer serviceId, Integer thesaurusId) {
        super(ThesaurusXService.THESAURUS_X_SERVICE);

        setServiceId(serviceId);
        setThesaurusId(thesaurusId);
    }
}
