/**
 * This class is generated by jOOQ
 */
package org.constellation.database.api.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Datasource extends org.jooq.impl.TableImpl<org.constellation.database.api.jooq.tables.records.DatasourceRecord> {

	private static final long serialVersionUID = 437330954;

	/**
	 * The reference instance of <code>admin.datasource</code>
	 */
	public static final org.constellation.database.api.jooq.tables.Datasource DATASOURCE = new org.constellation.database.api.jooq.tables.Datasource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.constellation.database.api.jooq.tables.records.DatasourceRecord> getRecordType() {
		return org.constellation.database.api.jooq.tables.records.DatasourceRecord.class;
	}

	/**
	 * The column <code>admin.datasource.id</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.datasource.type</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>admin.datasource.url</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

	/**
	 * The column <code>admin.datasource.username</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>admin.datasource.pwd</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> PWD = createField("pwd", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * The column <code>admin.datasource.store_id</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>admin.datasource.read_from_remote</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.Boolean> READ_FROM_REMOTE = createField("read_from_remote", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.datasource.date_creation</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.Long> DATE_CREATION = createField("date_creation", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>admin.datasource.analysis_state</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> ANALYSIS_STATE = createField("analysis_state", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>admin.datasource.format</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>admin.datasource.permanent</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.Boolean> PERMANENT = createField("permanent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>admin.datasource</code> table reference
	 */
	public Datasource() {
		this("datasource", null);
	}

	/**
	 * Create an aliased <code>admin.datasource</code> table reference
	 */
	public Datasource(java.lang.String alias) {
		this(alias, org.constellation.database.api.jooq.tables.Datasource.DATASOURCE);
	}

	private Datasource(java.lang.String alias, org.jooq.Table<org.constellation.database.api.jooq.tables.records.DatasourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Datasource(java.lang.String alias, org.jooq.Table<org.constellation.database.api.jooq.tables.records.DatasourceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.constellation.database.api.jooq.Admin.ADMIN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.constellation.database.api.jooq.tables.records.DatasourceRecord, java.lang.Integer> getIdentity() {
		return org.constellation.database.api.jooq.Keys.IDENTITY_DATASOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DatasourceRecord> getPrimaryKey() {
		return org.constellation.database.api.jooq.Keys.DATASOURCE_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DatasourceRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DatasourceRecord>>asList(org.constellation.database.api.jooq.Keys.DATASOURCE_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.constellation.database.api.jooq.tables.Datasource as(java.lang.String alias) {
		return new org.constellation.database.api.jooq.tables.Datasource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.constellation.database.api.jooq.tables.Datasource rename(java.lang.String name) {
		return new org.constellation.database.api.jooq.tables.Datasource(name, null);
	}
}
