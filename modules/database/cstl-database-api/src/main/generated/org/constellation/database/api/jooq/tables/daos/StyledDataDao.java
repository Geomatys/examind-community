/*
 * This file is generated by jOOQ.
 */
package org.constellation.database.api.jooq.tables.daos;


import java.util.List;

import org.constellation.database.api.jooq.tables.StyledData;
import org.constellation.database.api.jooq.tables.records.StyledDataRecord;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StyledDataDao extends DAOImpl<StyledDataRecord, org.constellation.database.api.jooq.tables.pojos.StyledData, Record2<Integer, Integer>> {

    /**
     * Create a new StyledDataDao without any configuration
     */
    public StyledDataDao() {
        super(StyledData.STYLED_DATA, org.constellation.database.api.jooq.tables.pojos.StyledData.class);
    }

    /**
     * Create a new StyledDataDao with an attached configuration
     */
    public StyledDataDao(Configuration configuration) {
        super(StyledData.STYLED_DATA, org.constellation.database.api.jooq.tables.pojos.StyledData.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(org.constellation.database.api.jooq.tables.pojos.StyledData object) {
        return compositeKeyRecord(object.getStyle(), object.getData());
    }

    /**
     * Fetch records that have <code>style BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.StyledData> fetchRangeOfStyle(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StyledData.STYLED_DATA.STYLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>style IN (values)</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.StyledData> fetchByStyle(Integer... values) {
        return fetch(StyledData.STYLED_DATA.STYLE, values);
    }

    /**
     * Fetch records that have <code>data BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.StyledData> fetchRangeOfData(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StyledData.STYLED_DATA.DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.StyledData> fetchByData(Integer... values) {
        return fetch(StyledData.STYLED_DATA.DATA, values);
    }
}
