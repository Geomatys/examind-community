/*
 * This file is generated by jOOQ.
 */
package org.constellation.database.api.jooq.tables.daos;


import java.util.List;

import org.constellation.database.api.jooq.tables.DataXData;
import org.constellation.database.api.jooq.tables.records.DataXDataRecord;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataXDataDao extends DAOImpl<DataXDataRecord, org.constellation.database.api.jooq.tables.pojos.DataXData, Record2<Integer, Integer>> {

    /**
     * Create a new DataXDataDao without any configuration
     */
    public DataXDataDao() {
        super(DataXData.DATA_X_DATA, org.constellation.database.api.jooq.tables.pojos.DataXData.class);
    }

    /**
     * Create a new DataXDataDao with an attached configuration
     */
    public DataXDataDao(Configuration configuration) {
        super(DataXData.DATA_X_DATA, org.constellation.database.api.jooq.tables.pojos.DataXData.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(org.constellation.database.api.jooq.tables.pojos.DataXData object) {
        return compositeKeyRecord(object.getDataId(), object.getChildId());
    }

    /**
     * Fetch records that have <code>data_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.DataXData> fetchRangeOfDataId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DataXData.DATA_X_DATA.DATA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data_id IN (values)</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.DataXData> fetchByDataId(Integer... values) {
        return fetch(DataXData.DATA_X_DATA.DATA_ID, values);
    }

    /**
     * Fetch records that have <code>child_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.DataXData> fetchRangeOfChildId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DataXData.DATA_X_DATA.CHILD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>child_id IN (values)</code>
     */
    public List<org.constellation.database.api.jooq.tables.pojos.DataXData> fetchByChildId(Integer... values) {
        return fetch(DataXData.DATA_X_DATA.CHILD_ID, values);
    }
}
